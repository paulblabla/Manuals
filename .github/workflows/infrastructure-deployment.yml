name: Infrastructure Deployment

on:
  # Bestaande triggers behouden
  push:
    branches: 
      - main
    paths:
      - 'infra/**'
      - '.github/workflows/infrastructure-deployment.yml'
  
  # Handmatige trigger toevoegen
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - test
          - production

# Benodigde permissies voor de workflow
permissions:
  id-token: write
  contents: read

jobs:
  validate-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'development' }}
    
    steps:
    # Checkout de repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Azure login met OIDC (veiliger dan service principal)
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Bepaal environment naam en parameters bestand
    - name: Set environment variables
      id: env_vars
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          ENV_NAME="${{ inputs.environment }}"
        else
          ENV_NAME="development"
        fi
        
        # Map environment name naar bicep param bestand
        if [ "$ENV_NAME" == "development" ]; then
          PARAM_FILE="parameters.dev.json"
        elif [ "$ENV_NAME" == "test" ]; then
          PARAM_FILE="parameters.test.json"
        elif [ "$ENV_NAME" == "production" ]; then
          PARAM_FILE="parameters.prod.json"
        fi
        
        echo "environment=$ENV_NAME" >> $GITHUB_OUTPUT
        echo "param_file=$PARAM_FILE" >> $GITHUB_OUTPUT

    # Haal de resourcegroep naam op uit parameters bestand
    - name: Get Resource Group Name
      id: rg_name
      run: |
        RG_NAME=$(jq -r '.parameters.resourceGroupName.value' infra/${{ steps.env_vars.outputs.param_file }})
        echo "resource_group=$RG_NAME" >> $GITHUB_OUTPUT

    # Controleer/Lint Bicep bestanden
    - name: Lint Bicep Files
      run: |
        az bicep install
        az bicep build --file infra/main.bicep

    # Valideer Bicep templates
    - name: Validate Bicep Templates
      run: |
        az deployment sub validate \
          --location westeurope \
          --template-file infra/main.bicep \
          --parameters infra/${{ steps.env_vars.outputs.param_file }}

    # Deploy infrastructuur
    - name: Deploy Infrastructure
      run: |
        # Maak resourcegroep aan als deze niet bestaat
        az group create --name ${{ steps.rg_name.outputs.resource_group }} --location westeurope
        
        # Deploy infrastructuur
        az deployment group create \
          --resource-group ${{ steps.rg_name.outputs.resource_group }} \
          --template-file infra/main.bicep \
          --parameters infra/${{ steps.env_vars.outputs.param_file }}

    # Basis validatie na deployment
    - name: Basic Infrastructure Validation
      run: |
        # Controleer de gemaakte resources
        az resource list --resource-group ${{ steps.rg_name.outputs.resource_group }} -o table